def stagePrepare(flag, apps, parallel_count) {
    stageList = []
    stageMap = [:]
    apps.eachWithIndex { app, path, i ->
        Integer lock_id = i % parallel_count
        if (flag == 'build') {
            stageMap.put(app, stageBuildCreate(app, path, lock_id))
        } else {
            stageMap.put(app, stageImageCreate(app, path, lock_id))
        }
    }
    stageList.add(stageMap)
    return stageList
}

def stageBuildCreate(app, path, lock_id) {
    return {
        stage(app) {
            lock("Build-lock-${lock_id}") {
                dir(path) {
                    sh """
                        [ -d target] || mkdir target
                        docker build -t ${app} -f Dockerfile-build .
                        docker run --name ${app} ${app} mvn test &&
                        docker cp ${app}:/app/target/ target/
                        docker rm -f ${app}
                    """
                    builtApps.put(app, path)
                }
            }
        }
    }
}

def stageImageCreate(app, path, lock_id) {
    return {
        stage(app) {
            lock("Image-create-lock-${lock_id}") {
                dir (path) {
                    sh "docker build -t ${app} -f Dockerfile-create ."
                }
            }
        }
    }
}